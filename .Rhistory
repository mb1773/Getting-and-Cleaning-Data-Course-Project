q3dat8 <- q3dat6[1:194,]
q3dat8
nrow(q3dat8)
q3dat8 <- q3dat6[1:190,]
q3dat8
nrow(q3dat8)
> mdat <- merge(q3dat7,q3dat8,all=TRUE)
mdat <- merge(q3dat7,q3dat8,all=TRUE)
mdat
head(mdat)
nrow(mdat)
mdat2 <- merge(q3dat7,q3dat8,by.x="CountryCode",by.y="Gross.domestic.product.2012",all=TRUE)
mdat2 <- merge(q3dat7,q3dat8,by="Gross.domestic.product.2012",all=TRUE)
mdat2
nrow(mdat2)
nrow(mdat1)
nrow(mdat)
head(mdat)
sdat3 <- arrange(mdat,desc(Gross.domestic.product.2012))
sdat3
head(sdat3,15)
mdat
mdat2 <- arrange(join(q3dat7,q3dat8),CountryCode)
nrow(mdat2)
head(mdat2)
sdat4 <- arrange(mdat2,desc(Gross.domestic.product.2012))
head(sdat4)
sdat4
mdat2[!is.na(mdat2$Gross.domestic.product.2012),]
sdat4 <- arrange(mdat2,desc(Gross.domestic.product.2012))
sdat4
mdat2
mdat2[!is.na(mdat2$Gross.domestic.product.2012),]
mdat3 <- mdat2[!is.na(mdat2$Gross.domestic.product.2012),]
mdat3
sdat4 <- arrange(mdat3,desc(Gross.domestic.product.2012))
sdat4
head(sdat4)
nrow(sdat4)
sdat4
mdat5 <- merge(q3dat7,q3dat8,all=FALSE)
mdat5
head(mdat5)
sdat4 <- arrange(mdat5,desc(Gross.domestic.product.2012))
sdat4
nrow(sdat4)
head(sdat4, 15)
sdat5 <- mdat5[order(-Gross.domestic.product.2012),]
sdat5 <- mdat5[order(,-Gross.domestic.product.2012)]
sdat5 <- mdat5[order(Gross.domestic.product.2012)]
sdat5 <- sdat4
sort(sdat5$Gross.domestic.product.2012)
sdat5[order(Gross.domestic.product.2012)]
sdat5[order(Gross.domestic.product.2012),]
sdat5[order(sdat5$Gross.domestic.product.2012),]
names(sdat5)
sdat5 <- sdat5[, -2]
sdat5
sdat5[order(sdat5$Gross.domestic.product.2012),]
nrow(sdat5)
head(q3dat4, 20)
which(sdat4[Gross.domestic.product.2012 == 13])
which(sdat4[,3] == 13)
which(sdat4[,Gross.domestic.product.2012]==13)
which(sdat4[,5] == 13)
head(sdat4)
which(sdat4[,4] == 13)
print(sdat4[155,])
head(sdat5)
head(sdat4)
sdat4 <- arrange(mdat5,desc(Gross.domestic.product.2012))
library("plyr", lib.loc="~/R/win-library/3.1")
sdat4 <- arrange(mdat5,desc(Gross.domestic.product.2012))
head(sdat4)
class(sdat4[5])
class(sdat4[4])
sapply(sdat4, mode)
sdat4[order(sdat[,4],)]
sdat4[order(sdat4[,4],)]
sdat4[ order(sdat4[,4])]
head(sdat4)
sdat4
order(sdat4[4])
order(sdat4, sdat4[4])
order(sdat4 by sdat4[4])
sdat4[with(sdat4, order(-sdat4[4]))]
sdat4[with(sdat4, order(desc(sdat4[4])))]
sdat4[with(sdat4, order(-Gross.domestic.product.2012))]
sdat4[order(-sdat$Gross.domestic.product.2012),]
sdat4[order(-sdat4$Gross.domestic.product.2012),]
sdat4[order(sdat4$CountryCode, -sdat4$Gross.domestic.product.2012),]
sdat4[order(sdat4$Gross.domestic.product.2012),]
sdat4
head(sdat4)
colnames(sdat4[,4] <- 'gdpr'
)
colnames(sdat4[4]) <- "gdpr"
names(sdat4)
head(sdat4)
sdat4[order(Gross.domestic.product.2012, decreasing=TRUE)]
sdat4[order(sdat4[4], decreasing=TRUE)]
sdat4[order(sdat4,4], decreasing=TRUE)]
sdat4[order(sdat4[],4], decreasing=TRUE)]
sdat4[order(sdat4[,4], decreasing=TRUE)]
sdat4[order(sdat4$Gross.domestic.product.2012, decreasing=TRUE)]
names(sdat4)
colnames(sdat4[4]) <- 'gdpr'
names(sdat4)
colnames(sdat4[,4]) <- 'gdpr'
sdat4[1,4]
sdat4[1,]
sdat4(1,1)
sdat4[1,1]
head(sdat4)
swirl()
install.packages("swirl")
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
library("swirl", lib.loc="~/R/win-library/3.1")
swirl()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ?accessType=DOWNLOAD"
download.file(fileUrl, destfile ="C:/coursera/fss06hid.csv")
download.file(fileUrl, destfile ="C:/coursera/ss06hid.csv")
download.file(fileUrl, destfile ="C:/coursera/get_data_ss06hid.csv")
q4dat <- data.table(read.csv("C:/coursera/get_data_fss06hid.csv"))
q4dat <- read.csv("C:/coursera/get_data_fss06hid.csv")
q4dat <- read.csv("C:/coursera/getdata_data_fss06hid.csv")
q4dat <- read.csv("C:/coursera/getdata_data_ss06hid.csv")
vname <- names(q4dat)
vnamesplit <- strsplit(vname, "wgtp")
vnamesplit[[123]]
q4q2dat <- read.csv("C:/coursera/getdata_data_GDP.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE)
q4q2dat2 <- q4q2dat[X != ""]
head(q4q2dat)
q4q2dat2 <- q4q2dat[x != ""]
q4q2dat2 <- q4q2dat[,x != ""]
q4q2dat2 <- q4q2dat[,$x != ""]
q4q2dat2 <- q4q2dat[q4q2dat$x != ""]
q4q2dat3 <- q4q2dat2[, list(X, X.1, X.3, X.4)]
setnames(q4q2dat2, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
?setnames
library("plyr", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("rstudio", lib.loc="~/R/win-library/3.1")
library("xlsx", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
setnames(q4q2dat3, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
dimnames(q4q2dat3, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
names(q4q2dat3, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
names(q4q2dat3) = c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
column.names = c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
names(q4q2dat3) <- c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
names(q4q2dat3)
q4q2dat3
q4q2dat2
names(q4q2dat2)
head(q4q2dat)
names(q4q2dat)
library("dplyr", lib.loc="~/R/win-library/3.1")
head(q4q2dat)
summarize(q4q2dat)
str(q4q2dat)
sub("//.","",names(q4q2dat),)
sub(".","",names(q4q2dat),)
names(q4q2dat)
names(q4q2dat) <- sub("//."."")
names(q4q2dat) <- sub(".","")
names(q4q2dat) <- sub(".","",names(q4q2dat))
names(q4q2dat)
q4q2dat <- read.csv("C:/coursera/getdata_data_GDP.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE)
q4q2dat2 <- q4q2dat[q4q2dat$x != ""]
head(q4q2dat)
names(q4q2dat) <- gsub("x.4","gdp", names(q4q2dat))
names(q4q2dat)
names(q4q2dat[4]) <- "gdp"
names(q4q2dat)
head(q4q2dat)
colnames(q4q2dat[,4]) <- gdp
colnames(q4q2dat[,4]) <- "gdp"
names(q4q2dat)[names(q4q2dat) == 'x.4'] <- 'gdp'
names(q4q2dat)
library("data.table", lib.loc="~/R/win-library/3.1")
q4q2dat3 <- q4q2dat2[, list(X, X.1, X.3, X.4)]
setnames(q4q2dat3, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "LongName", "gdp"))
setnames(q4q2dat2, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "LongName", "gdp"))
q4q2dat3 <- q4q2dat2[, list(X, X.1, X.3, X.4)]
library("data.table", lib.loc="~/R/win-library/3.1")
q4q2dat <- read.csv("C:/coursera/getdata_data_GDP.csv", skip = 4, nrows = 215, stringsAsFactors = FALSE)
q4q2dat2 <- q4q2dat[q4q2dat$x != ""]
q4q2dat3 <- q4q2dat2[, list(X, X.1, X.3, X.4)]
View(`q4q2dat2`)
View(`q4q2dat`)
fileUrl<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv?accessType=DOWNLOAD"
file <- file.path(getwd(),"GDP.csv")
download.file(fileUrl,file)
dtGDP <- data.table (read.csv(file, skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- data.table (read.csv(file, skip=4, nrows=215, stringsAsFactors=FALSE))
View(dtGDP)
dtGDP
dtGDP <- dtGDP[,list(X,X.1,X.3,X.4)]
setnames(dtGDP,c("X","X.1","X.3","X.4"),c("CountryCode", "rankingGDP", "countryNames", "gdp"))
gdp<- as.numeric(gsub(",","", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
grep("^United",countryNames), 3
grep("United$",countryNames), 3
grep("^United",countryNames), 4
grep("*United",countryNames), 2
grep("^United",countryNames)
grep("United$",countryNames)
grepl("^United",countryNames)
View(dtGDP)
grep("^United",dtgdp$countryNames)
grep("^United",dtGDP$countryNames)
grepl("^United",dtGDP$countryNames)
isunited <- grepl("^United",dtGDP$countryNames)
summary(isunited)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
?lubridate
library("lubridate", lib.loc="~/R/win-library/3.1")
starts2012 <- grepl("^2012",amzn$row.names)
starts2012
starts2012 <- grepl("^2012",(amzn$row.names))
starts2012
summary(starts2012)
View(amzn)
starts2012 <- grepl("^2012",(amzn$row.names))
just2012 <- amzn[1]="^2012"
just2012 <- subset(amzn, amzn[1]="^2012")
amzn <- getSymbols("AMZN", auto.assign = FALSE)
amzn
View(amzn)
sampleTimes <- index(amzn)
sampleTimes
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
detach("package:lubridate", unload=TRUE)
library("lubridate", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
setwd("c:/coursera/UCIHARDataset")
setwd("c:/coursera/UCIHAR Dataset")
setwd("c:/coursera/UCIHAR Dataset")
C
setwd("C:/coursera/UCIHAR Dataset")
setwd("C:/coursera/UCIHAR_Dataset")
setwd("C:/coursera/UCI_HAR_Dataset")
setwd("C:/coursera/UCI HAR Dataset")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("plyr", lib.loc="~/R/win-library/3.1")
library("tidyr", lib.loc="~/R/win-library/3.1")
train <- read.table("train/X_train.txt")
test <- read.table("test/X_test.txt")
X <- rbind(train, test)
train2 <- read.table("train/subject_train.txt")
test2 <- read.table("test/subject_test.txt")
Sub <- rbind(train2, test2)
train3 <- read.table("train/y_train.txt")
test3 <- read.table("test/y_test.txt")
Y <- rbind(train3, test3)
features <- read.table("features.txt")
featureindices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featureindices]
names(X) <- features[featureindices, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
## Step 3  Name Activities in dataset descriptively
activities <- read.table("activity_labels.txt")
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y[,1] = activities[Y[,1], 2]
names(Y) <- "activity"
names(S) <- "subject"
names(Sub) <- "subject"
cleantraintest <- cbind(Sub, Y, X)
write.table(cleantraintest, "tidy_data.txt")
uniqSubjects = unique(Sub)[,1]
uniqsubjects = unique(Sub)[,1]
numbersubjects = length(unique(S)[,1])
numbersubjects = length(unique(Sub)[,1])
numberactivities = length(activities[,1])
numbercols = dim(cleantraintest)[2]
result = cleantraintest[1:(numbersubjects*numberactivities), ]
count = 1
for (a in 1:numbersubjects) {
for (b in 1:numberactivities) {
result[count, 1] = uniqsubjects[s]
result[count, 2] = activities[a, 2]
tmp <- cleantraintest[cleantraintest$subject==s & cleantraintest$activity==activities[a, 2], ]
result[count, 3:numCols] <- colMeans(tmp[, 3:numCols])
count = count+1
}
}
count = 1
for (s in 1:numbersubjects) {
for (a in 1:numberactivities) {
result[count, 1] = uniqsubjects[s]
result[count, 2] = activities[a, 2]
tmp <- cleantraintest[cleantraintest$subject==s & cleantraintest$activity==activities[a, 2], ]
result[count, 3:numCols] <- colMeans(tmp[, 3:numCols])
count = count+1
}
}
count = 1
for (s in 1:numbersubjects) {
for (a in 1:numberactivities) {
result[count, 1] = uniqsubjects[s]
result[count, 2] = activities[a, 2]
tmp <- cleantraintest[cleantraintest$subject==s & cleantraintest$activity==activities[a, 2], ]
result[count, 3:numCols] <- colMeans(tmp[, 3:numbercols])
count = count+1
}
}
count = 1
for (s in 1:numbersubjects) {
for (a in 1:numberactivities) {
result[count, 1] = uniqsubjects[s]
result[count, 2] = activities[a, 2]
tmp <- cleantraintest[cleantraintest$subject==s & cleantraintest$activity==activities[a, 2], ]
result[count, 3:numbercols] <- colMeans(tmp[, 3:numbercols])
count = count+1
}
}
count = 1
for (c2 in 1:numbersubjects) {
for (c3 in 1:numberactivities) {
result[count, 1] = uniqsubjects[c2]
result[count, 2] = activities[c3, 2]
tmp <- cleantraintest[cleantraintest$subject==c2 & cleantraintest$activity==activities[c3, 2], ]
result[count, 3:numbercols] <- colMeans(tmp[, 3:numbercols])
count = count+1
}
}
write.table(result, "data_with_averages.txt")
final = cleantraintest[1:(numbersubjects*numberactivities), ]
count = 1
for (c2 in 1:numbersubjects) {
for (c3 in 1:numberactivities) {
final[count, 1] = uniqsubjects[c2]
final[count, 2] = activities[c3, 2]
tmp <- cleantraintest[cleantraintest$subject==c2 & cleantraintest$activity==activities[c3, 2], ]
final[count, 3:numbercols] <- colMeans(tmp[, 3:numbercols])
count = count+1
}
}
write.table(final, "data_with_averages.txt")
View(final)
setwd("C:/coursera/UCI HAR Dataset")
train <- read.table("train/X_train.txt")
View(train)
test <- read.table("test/X_test.txt")
X <- rbind(train, test)
View(X)
View(X)
train2 <- read.table("train/subject_train.txt")
test2 <- read.table("test/subject_test.txt")
View(train2)
View(test)
View(test)
View(test)
View(test)
View(train2)
View(test2)
Sub <- rbind(train2, test2
)
train3 <- read.table("train/y_train.txt")
View(train3)
View(train3)
test3 <- read.table("test/y_test.txt")
View(test3)
Y <- rbind(train3, test3)
View(Y)
features <- read.table("features.txt")
View(features)
featureindices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
View(features)
featureindices
X <- X[, featureindices]
View(X)
View(features)
featurerows <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featurerows]
X <- X[, featureindices]
featureindices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featureindices]
featureindices
x
setwd("C:/coursera/UCI HAR Dataset")
train <- read.table("train/X_train.txt")
test <- read.table("test/X_test.txt")
test <- read.table("test/X_test.txt")
train2 <- read.table("train/subject_train.txt")
test2 <- read.table("test/subject_test.txt")
train3 <- read.table("train/y_train.txt")
test3 <- read.table("test/y_test.txt")
Y <- rbind(train3, test3)
features <- read.table("features.txt")
featureindices <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featureindices]
X <- rbind(train, test)
X <- X[, featureindices]
X <- rbind(train, test)
featurerows <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featurerows]
names(X) <- features[featurerows, 2]
x
View(X)
setwd("C:/coursera/UCI HAR Dataset")
train <- read.table("train/X_train.txt")
test <- read.table("test/X_test.txt")
X <- rbind(train, test)
train2 <- read.table("train/subject_train.txt")
test2 <- read.table("test/subject_test.txt")
Sub <- rbind(train2, test2)
train3 <- read.table("train/y_train.txt")
test3 <- read.table("test/y_test.txt")
Y <- rbind(train3, test3)
features <- read.table("features.txt")
featurerows <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
X <- X[, featurerows]
names(x)
x
X
head(X)
names(X) <- features[featurerows, 2]
head(X)
names(X) <- gsub("\\(|\\)", "", names(X))
head(X)
names(X) <- tolower(names(X))
activities <- read.table("activity_labels.txt")
View(activities)
View(activities)
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
View(activities)
Y[,1] = activities[Y[,1], 2
)
Y[,1] = activities[Y[,1], 2
]
Y
View(Y)
View(train3)
View(test3)
View(Y)
View(test3)
View(Y)
View(X)
View(X)
View(activities)
## This R script is for the course project for the Getting and Cleaning Data course
## on Coursera
## Source data for this project from
## https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip
## This R script does the following
## 1. Merges the training and the test sets to create one data set.
## 2. Extracts only the measurements on the mean and standard deviation for each
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names
## 5.  creates a second, independent tidy data set with the average of each
##     variable for each activity and each subject
## set working directory
setwd("C:/coursera/UCI HAR Dataset")
## Step 1 - Merge the Training and Test Sets into variables X, Sub and Y
train <- read.table("train/X_train.txt")
test <- read.table("test/X_test.txt")
X <- rbind(train, test)
train2 <- read.table("train/subject_train.txt")
test2 <- read.table("test/subject_test.txt")
Sub <- rbind(train2, test2)
train3 <- read.table("train/y_train.txt")
test3 <- read.table("test/y_test.txt")
Y <- rbind(train3, test3)
## Step 2: Extract Measurements on Mean and STD
features <- read.table("features.txt")
## select only rows withy mean and STD from features
featurerows <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
## subset x to only mean and std based on featurerows
X <- X[, featurerows]
## Set column heads of X to match features
names(X) <- features[featurerows, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
## set to lower case for clean variable names
names(X) <- tolower(names(X))
## Step 3: Name Activities in dataset descriptively
activities <- read.table("activity_labels.txt")
## replace _ and change to lower case
activities[, 2] = gsub("_", "", tolower(as.character(activities[, 2])))
Y[,1] = activities[Y[,1], 2]
## name column in Y descriptively
names(Y) <- "activity"
## Step4 and 5: Add descriptive label names and creates new data set
names(Sub) <- "subject"
cleantraintest <- cbind(Sub, Y, X)
write.table(cleantraintest, "tidy_data.txt")
uniqsubjects = unique(Sub)[,1]
numbersubjects = length(unique(Sub)[,1])
numberactivities = length(activities[,1])
numbercols = dim(cleantraintest)[2]
final = cleantraintest[1:(numbersubjects*numberactivities), ]
count = 1
for (c2 in 1:numbersubjects) {
for (c3 in 1:numberactivities) {
final[count, 1] = uniqsubjects[c2]
final[count, 2] = activities[c3, 2]
tmp <- cleantraintest[cleantraintest$subject==c2 & cleantraintest$activity==activities[c3, 2], ]
final[count, 3:numbercols] <- colMeans(tmp[, 3:numbercols])
count = count+1
}
}
write.table(final, "data_with_averages.txt")
viewfinal <- read.table("data_with_averages.txt")
View(viewfinal)
